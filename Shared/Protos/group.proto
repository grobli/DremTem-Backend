syntax = "proto3";

import "google/protobuf/empty.proto";
import "google/protobuf/wrappers.proto";

import "Protos/shared_definitions.proto";
import "Protos/common.proto";

option csharp_namespace = "Shared.Proto";

service GroupGrpc {
  // queries
  rpc GetAllGroups (common.GenericGetManyRequest) returns (GetAllGroupsResponse);
  rpc GetGroup (common.GenericGetRequest) returns (GroupDto);
  rpc GetGroupByName (GetGroupByNameRequest) returns (GroupDto);

  // commands
  rpc CreateGroup (CreateGroupRequest) returns (GroupDto);
  rpc UpdateGroup (UpdateGroupRequest) returns (GroupDto);
  rpc DeleteGroup (common.GenericDeleteRequest) returns (google.protobuf.Empty);
  rpc AddDeviceToGroup (AddDeviceToGroupRequest) returns (google.protobuf.Empty);
  rpc RemoveDeviceFromGroup (RemoveDeviceFromGroupRequest) returns (google.protobuf.Empty);
}

message GetAllGroupsResponse {
  repeated GroupDto Groups = 1;
  common.PaginationMetaData MetaData = 2;
}

message CreateGroupRequest {
  string Name = 1;
  string UserId = 2;

  // Properties
  google.protobuf.StringValue DisplayName = 3;
}

message UpdateGroupRequest {
  int32 Id = 1;

  // Properties
  google.protobuf.StringValue DisplayName = 2;

  // allow only owner of the group to update it
  string UserId = 8;
}

message AddDeviceToGroupRequest {
  int32 GroupId = 1;
  int32 DeviceId = 2;
  // allow only owner of the group and device to add it
  string UserId = 8;
}

message RemoveDeviceFromGroupRequest {
  int32 GroupId = 1;
  int32 DeviceId = 2;
  // allow only owner of the group and device to remove it
  string UserId = 8;
}

message GetGroupByNameRequest {
  string GroupName = 1;
  common.GetRequestParameters Parameters = 2;
}

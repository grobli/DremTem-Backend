version: '3.8'
services:
  db-postgres:
    image: 'postgres'
    ports:
      - '5432:5432'
    environment:
      POSTGRES_PASSWORD: 'password'
    volumes:
      - './data/db:/var/lib/postgresql/data'
  db-timescale:
    image: 'timescale/timescaledb-ha:pg14-latest'
    ports:
      - '5555:5432'
    environment:
      POSTGRES_PASSWORD: 'password'
    volumes:
      - './data/timescale:/var/lib/postgresql/data'
  consul:
    image: 'consul'
    ports:
      - '8300:8300'
      - '8500:8500'
  rabbitmq:
    image: 'rabbitmq:3-management'
    ports:
      - '15672:15672' # management
      - '5672:5672' # bus
  user-identity:
    build:
      context: '.'
      dockerfile: './UserIdentity.Api/Dockerfile'
    ports:
      - '6000:6000'
      - '6001:6001'
    environment:
      ASPNETCORE_URLS: 'http://+:6000;https://+:6001'
      ASPNETCORE_HTTPS_PORT: '6001'
      ASPNETCORE_ENVIRONMENT: 'docker'
      ASPNETCORE_Kestrel__Certificates__Default__Password: password
      ASPNETCORE_Kestrel__Certificates__Default__Path: /https/aspnetapp.pfx
    volumes:
      - '~/.aspnet/https:/https:ro'
    depends_on:
      - db-postgres
      - rabbitmq
      - consul
    restart: on-failure
    command: [ './wait-for-it.sh', 'db-postgres:5432' ]
  device-manager:
    build:
      context: '.'
      dockerfile: './DeviceManager.Api/Dockerfile'
    ports:
      - '5000:5000'
      - '5001:5001'
    environment:
      ASPNETCORE_URLS: 'http://+:5000;https://+:5001'
      ASPNETCORE_HTTPS_PORT: '5001'
      ASPNETCORE_ENVIRONMENT: 'docker'
      ASPNETCORE_Kestrel__Certificates__Default__Password: password
      ASPNETCORE_Kestrel__Certificates__Default__Path: /https/aspnetapp.pfx
    volumes:
      - '~/.aspnet/https:/https:ro'
    depends_on:
      - db-postgres
      - rabbitmq
      - consul
    restart: on-failure
    command: [ './wait-for-it.sh', 'db-postgres:5432' ]
    deploy:
      resources:
        limits:
          cpus: '2'
          memory: 4096M
  client-gateway:
    build:
      context: '.'
      dockerfile: './ClientApiGateway.Api/Dockerfile'
    ports:
      - '8080:8080'
      - '8081:8081'
    restart: on-failure
    environment:
      ASPNETCORE_URLS: 'http://+:8080;https://+:8081'
      ASPNETCORE_HTTPS_PORT: '8081'
      ASPNETCORE_ENVIRONMENT: 'docker'
      ASPNETCORE_Kestrel__Certificates__Default__Password: password
      ASPNETCORE_Kestrel__Certificates__Default__Path: /https/aspnetapp.pfx
    volumes:
      - '~/.aspnet/https:/https:ro'
    depends_on:
      - consul
      - user-identity
      - device-manager
      - sensor-data-1
  device-gateway:
    build:
      context: '.'
      dockerfile: './DeviceApiGateway.Api/Dockerfile'
    ports:
      - '9090:9090'
      - '9091:9091'
    environment:
      ASPNETCORE_URLS: 'http://+:9090;https://+:9091'
      ASPNETCORE_HTTPS_PORT: '9091'
      ASPNETCORE_ENVIRONMENT: 'docker'
      ASPNETCORE_Kestrel__Certificates__Default__Password: password
      ASPNETCORE_Kestrel__Certificates__Default__Path: /https/aspnetapp.pfx
    volumes:
      - '~/.aspnet/https:/https:ro'
    depends_on:
      - consul
      - device-manager
      - sensor-data-1
    restart: on-failure
  sensor-data-1:
    build:
      context: '.'
      dockerfile: './SensorData.Api/Dockerfile'
    ports:
      - '7000:7000'
    environment:
      ASPNETCORE_URLS: 'http://+:7000;https://+:7001'
      ASPNETCORE_HTTPS_PORT: '7001'
      ASPNETCORE_ENVIRONMENT: 'docker'
      ASPNETCORE_Kestrel__Certificates__Default__Password: password
      ASPNETCORE_Kestrel__Certificates__Default__Path: /https/aspnetapp.pfx
      User__Id: 'f42caf8a-438e-479f-b479-4c0d23944c4c' # test user
    volumes:
      - '~/.aspnet/https:/https:ro'
    depends_on:
      - consul
      - rabbitmq
      - device-manager
      - db-timescale
    command: [ './wait-for-it.sh', 'db-postgres:5432' ]
    restart: on-failure
